-

! hook engine {
    included by replaced util.lua
    hijacks the first setting of _ENV.init to hook into core tables (widget, player etc.)
}

! TRADING SYSTEM {
    part of stardustlib; basically Path of Exile's trade UI
    quickbar button puts an item in cursor; clicking on a player prompts them to accept/reject trade, via playerext
    right click dismisses without trading, and emits a sound effect to the player (might need UI shenanigans for local sfx?)
    cursor item should make it look like a trade-icon cursor, if that's achievable
    on (unexpected) uninit, spawn a stagehand at player position that lasts for ~.5sec and deletes cursor item from anywhere it can find
    (consume item drops, consume from containers within reach, consume from player inventory)
}

sb.jsonQuery exists, adjust itemutil.property?

- lib frontend for playerextender, to make things a bit more convenient (also polymorphism in case playerext needs to change)
see if activeitems can store data into themselves; if so, give phase drill its own battery?
alternative, tip-glow-only effect for phase drill when cursor is too close to player
^ actually, just add particles to beam tip and snap them to the lens if too close
- some sort of animation for the beam during phase drill hold to make it look like it's doing something and not just sitting there

configurable tram stop {
  built-in player sensor
}

reserve material ID range somewhere
semigloss black hull panel

/ figure out how the feck to detect if shift is held (done hackishly, but at least it's there)
implement slot-drop? drop into empty space, or maybe the selection icon area?
somewhat redesign UI to make better use of now-unneeded tooltip area

TERMINAL THEMABILITY?
make terminal not update every tick just for animation if it's not waiting on any players

x BYOS functionality as machine { // probably incompatible with FU's version
    damageTileArea with ridiculously high strength and harvest level and radius big enough to cover a t8 vanilla ship from one end, in both fg and bg
    itemDropQuery and collect into database
    upgrade player ship to custom tier to get rid of bg image and collision material
    force-kill objects set "residual" by Hacking them and using object.smash
}
patch warp state matching into encounter variations of booster flames (/objects/ship/boosters/)
add distinguishing names to even/odd small booster flames
lots of shiny new ship components, especially animating ones that match their state to flight {
    - also floor-only teleporters (implemented as part of telepads)
    warp cores should count as FU ones, if possible
}

power stuffs {
    bump up the maximum charging rate (packet size) of Resonite Transmitter
    
    nanofield {
        action states?
        - fall damage immunity
        - hard-fall effect of some sort
        
        - some temporary means of giving the thing actual armor stats
        - figure out what to do for sphere mode
        
        power draw for stuff
        
        - lingering deploy error with FU if mech is incomplete
        
        elytra {
            - tween rotation and implement rez/derez animation
            - autoswitch only when environment gravity changes
            speed/thrust stats
        }
    }
    
    Resonite Reactor!
    
    - fix phase drill aim compensation (beam start)
    (...and flashlight)

    fluxsaber (fluxpulse-charged beamsword)
    pulse rifle (machine gun), vector rifle (railgun)
    fluxpulse weapons get a damage bonus when wielded in elytra in a zero-g environment
    
    intermediary pulse-battery component?
    maybe a way to add a pulse battery to stock equipment
    
    powered lamp that fills a large region with full-bright light (basically volumetric lighting at the cost of fp)
    
    more smelter-type machines
    ^ chance bias stat (inverse exponent to random number)
    
    prefix and move power categories to stardustlib
    modular gear category
    
    eventually make transmatter network require power (after rewrite)
}

compost bin that makes food age faster, for use as biofuel
^ some sort of powered processor to make (liquid) biodiesel?

renamer (custom shortdescription, put vanilla one as category because tooltip)

actual configurator object instead of having it in the quickbar for non-admins

some item transport for automation (and library to make use of input/output configuration)
networked wire I/O ports

# make RCS tech obtainable; balance energy use

clean up tinkertable categories

some major cleanup in places

probably a UI lib that encapsulates widgets (read from heirarchy)

Extend sync library {
    //Recognize RpcPromise returning another RpcPromise and replace in queue
    
    actually, response system with a proper response-message instead of just an RpcPromise
    generate responseID with makeuuid? register with an anonymous function for continuation of operation after response
}

Aetheri species mod {
    
    Androgynous, fullbright "core" (novakid male minus chest definition, with Avian-ish talons) with crystalline plates on top
    (part of innate armor); hue and brightness sliders for core, fine-grained control over what plates you have
    Make the belly line (beyond female outline) a different color so it can be hidden when wearing contoured stuff
    # "Focus" slot; an item held in the hand(s) while using Innates that modifies stats
    
    Innate flight in zero-g, similar controls to Elytra
    
    - set "Nude" stat to -100 or so to prevent beds taking off their crystal plating
    
    Innates {
        No matter manipulator; instead, essential slots are skill slots for Innate Skills
        - powered by a large, slowly-regenerating pool of secondary energy (Aether?)
        
        Kinetic Burst {
            - Aimed melee skill with some reach
            - Bonus damage based on velocity in the aiming direction
        }
    }
    
    Skill tree {
        - Matter manipulator screen replaced with the Aethyrium, a set of skill trees
        - Passive tree akin to Path of Exile; replaces armor stats and techs
        Active skill tree for unlocking and upgrading Innates
        
        - xp gained from enemy kills, usable toward next passive point with slow ramping-up of cost (Warframe focus-style)
          or active skill nodes with fixed costs
        - status effect that monkey-patches xp gains for nearby players on enemy death into their script context
        
        hmm. leave back slot open?
        
        - make some things (like sprint speed) work as the "increased" multiplier itself (since sprint speed is itself a multiplier)
    }
    
    Hunger system {
        Stat locked so that food doesn't replenish; instead, it's based on exposure to the stars
        Regenerates in about a minute when exposed to sun or starlight; 2-3x faster while on ship
    }
}

// Transmatter network reimplementation { // not sure if it's needed or if drive bays just need further fixing up
    Controller {
        API {
            callable via both callScriptedEntity and sendEntityMessage
            each request runs as a coroutine placed on a queue for suspendability and environment cleanliness
            
            ...
        }
        Network Scan Module {
            periodically scans the network pool, assembles the list of storage devices and notifies peripherals
        }
    }
}
